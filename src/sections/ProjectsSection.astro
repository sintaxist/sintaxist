---
import SectionLayout from "@/layouts/SectionLayout.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import AnimatedItem from "@/components/ui/AnimatedItem.astro";
import Button from "@/components/ui/Button.astro";
import { PROJECTS } from "@/data/projects.js";

const { t } = Astro.props;
const featuredProjects = PROJECTS.slice(0, 6);
---

<SectionLayout
  id="projects"
  color="secondary"
  className="flex flex-col gap-8 sm:gap-10"
  border={false}
>
  <SectionTitle text={t.title} color="primary" />
  <p class="font-secondary text-sm xs:text-base sm:text-md md:text-lg">
    {t.description}
  </p>

  <div class="projects-grid">
    {
      featuredProjects.map((project, index) => (
        <AnimatedItem
          delay={index * 150}
          className={`project-item-${index + 1}`}
        >
          <div class="anim-item h-full">
            <ProjectCard
              project={project}
              size={index === 0 || index === 5 ? "large" : "small"}
            />
          </div>
        </AnimatedItem>
      ))
    }
  </div>

  <div class="md:m-auto">
    <Button
      as="a"
      href="/projects"
      text={t.cta}
      fill={false}
      color="primary"
      arrow={true}
    />
  </div>
</SectionLayout>

<style>
  /* Grid complejo para el layout asim√©trico */
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(1, 1fr);
    gap: 1.5rem;
  }
  @media (min-width: 768px) {
    .projects-grid {
      grid-template-columns: repeat(2, 1fr);
    }
    .project-item-1 {
      grid-column: span 2;
    }
    .project-item-6 {
      grid-column: span 2;
    }
  }
  @media (min-width: 1024px) {
    .projects-grid {
      grid-template-columns: repeat(3, 1fr);
    }
    .project-item-1 {
      grid-column: span 2;
      grid-row: span 2;
    }
    .project-item-6 {
      grid-column: span 2;
      grid-row: span 2;
    }
  }
</style>
