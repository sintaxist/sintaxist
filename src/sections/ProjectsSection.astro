---
import SectionLayout from "@/layouts/SectionLayout.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
// import ProjectCard from "@/components/ProjectCard.astro";
import ProjectCardSwiper from "@/components/ProjectCardSwiper.astro";
// import AnimatedItem from "@/components/ui/AnimatedItem.astro";
import Button from "@/components/ui/Button.astro";
import GridCardsLayout from "@/components/GridCardsLayout.astro";

const { t, lang } = Astro.props;
// const featuredProjects = PROJECTS.slice(0, 6);
---

<SectionLayout
  id="projects"
  color="secondary"
  className="flex flex-col gap-8 sm:gap-10"
  border={false}
>
  <SectionTitle text={t.title} color="primary" />
  <p class="font-secondary text-sm xs:text-base sm:text-md md:text-lg">
    {t.description}
  </p>

  <GridCardsLayout projects={t.projects} categories={t.categories} {lang} />

  <div class="block md:hidden">
    <div class="swiper mySwiper pb-12">
      <div id="swiper-cards" class="swiper-wrapper">
        {
          t.projects.map((project, index) => (
            <ProjectCardSwiper {project} {lang} categories={t.categories} />
          ))
        }
      </div>

      <!-- Barra de progreso -->
      <div class="swiper-pagination"></div>
    </div>
  </div>

  <div class="md:m-auto">
    <Button
      as="a"
      href={`/${lang}/projects/`}
      text={t.cta_all_projects}
      fill={false}
      color="primary"
      arrow={true}
    />
  </div>
</SectionLayout>
<script>
  import Swiper from "swiper";
  import { Pagination } from "swiper/modules";

  document.addEventListener("astro:page-load", () => {
    function normalizeSlideHeights() {
      const slides = document.querySelectorAll(".mySwiper .swiper-slide");
      let maxHeight = 0;

      slides.forEach((slide) => {
        (slide as HTMLElement).style.height = "auto";
        maxHeight = Math.max(maxHeight, (slide as HTMLElement).offsetHeight);
      });

      slides.forEach((slide) => {
        (slide as HTMLElement).style.height = `${maxHeight}px`;
      });
    }

    function loadSwiperCSS() {
      const swiper = new Swiper(".mySwiper", {
        modules: [Pagination],
        slidesPerView: 1,
        spaceBetween: 16,
        freeMode: true,
        grabCursor: true,
        mousewheel: true,
        keyboard: {
          enabled: true,
        },
        pagination: {
          el: ".swiper-pagination",
          type: "progressbar",
        },
        breakpoints: {
          320: { slidesPerView: 1.3 },
          480: { slidesPerView: 1.5 },
          640: { slidesPerView: 2 },
        },
        on: {
          init: normalizeSlideHeights,
          resize: normalizeSlideHeights,
          update: normalizeSlideHeights,
        },
      });
      // Si ya existe, no volver a inyectar
      if (!document.getElementById("swiper-css")) {
        // Swiper base CSS
        const link = document.createElement("link");
        link.id = "swiper-css";
        link.rel = "stylesheet";
        link.href =
          "https://cdn.jsdelivr.net/npm/swiper@11/swiper-bundle.min.css";
        document.head.appendChild(link);

        // Tus estilos personalizados
        const style = document.createElement("style");
        style.id = "swiper-custom-styles";
        style.textContent = `
        .swiper {
          padding-bottom: 3rem;
        }
        .swiper-slide {
          display: flex;
          justify-content: center;
          align-items: stretch;
        }
        .swiper-slide > div {
          flex: 1 !important;
        }
        .swiper-pagination {
          position: absolute;
          bottom: 0;
          left: 50% !important;
          top: unset !important;
          transform: translateX(-50%);
          width: 90% !important;
          height: 6px;
          background-color: #D2DCED;
          border-radius: 30px;
          overflow: hidden;
        }
        .swiper-pagination-progressbar-fill {
          background: #234C91 !important;
          border-radius: 30px;
        }
      `;
        document.head.appendChild(style);
      }
    }

    // Detectar mobile (breakpoint md:hidden â†’ ~768px)
    if (window.matchMedia("(max-width: 767px)").matches) {
      loadSwiperCSS();
    }

    // Opcional: volver a evaluar en resize
    window.addEventListener("resize", () => {
      if (window.matchMedia("(max-width: 767px)").matches) {
        loadSwiperCSS();
      }
    });
  });
</script>
