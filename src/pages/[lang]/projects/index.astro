---
import Layout from "@/layouts/Layout.astro";
import SectionLayout from "@/layouts/SectionLayout.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import GridCardsLayout from "@/components/GridCardsLayout.astro";
import { LANGUAGES } from "@/locales";
import ArrowIcon from '@/icons/Arrow.astro';

export async function getStaticPaths() {
  const paths = [];

  for (const lang of Object.keys(LANGUAGES)) {
    const t = LANGUAGES[lang].translations;

    const filteredProjects = t.projectsPage.projects.map((p) => ({
      slug: p.slug,
      title: p.title,
      description: p.description,
      categoryIds: p.categoryIds,
      imgSrc: p.imgSrc,
      viewMore: t.projectsPage.viewMore,
    }));

    paths.push({
      params: { lang },
      props: {
        texts: {
          allProjectsTitle: t.projectsPage.allProjectsTitle,
          allProjectsDescription: t.projectsPage.allProjectsDescription,
          title: t.projectsPage.title,
        },
        header: t.header,
        sections: t.sections,
        footer: t.footer,
        lang,
        projects: filteredProjects,
        categories: t.projectsPage.categories,
        ctaBacktoHome: t.projectsPage.ctaBacktoHome,
      },
    });
  }

  return paths;
}

const {
  texts,
  lang,
  projects,
  categories,
  header,
  sections,
  footer,
  ctaBacktoHome,
} = Astro.props;

// Dividir proyectos en grupos de 6
const projectBatches = [];
for (let i = 0; i < projects.length; i += 6) {
  projectBatches.push(projects.slice(i, i + 6));
}
---

<Layout
  title={texts.allProjectsTitle}
  description={texts.allProjectsDescription}
  headerInfo={header}
  sections={sections}
  footerInfo={footer}
>
  <SectionLayout
    id="contact"
    color="secondary"
    border={false}
    className="mt-18 flex flex-col gap-4"
  >
    <a
      href="/"
      id="back-to-home-btn"
      class="hidden text-xs md:text-sm relative font-secondary text-primary hover:text-primary-hover transition-colors font-bold w-fit"
    >
      <ArrowIcon class="scale-[-1] w-4 h-4 group-hover:translate-x-2" /> {ctaBacktoHome}
    </a>

    <SectionTitle color="primary" text={texts.title || "Proyectos"} tag="h1" />

    <div class="flex flex-col gap-[5px] mt-6">
      {
        projectBatches.map((batch, index) => (
          <GridCardsLayout projects={batch} categories={categories} {lang} />
        ))
      }
    </div>
  </SectionLayout>
</Layout>

<script define:vars={{ lang }}>
  document.addEventListener("astro:page-load", () => {
    const backButton = document.getElementById("back-to-home-btn");
    if (!backButton) return;

    // Marcar en sessionStorage cuando venimos desde la home
    const currentPath = window.location.pathname;
    const isProjectsPage = currentPath.includes('/projects');
    
    // Si estamos en la página de proyectos, verificar de dónde venimos
    if (isProjectsPage) {
      const cameFromHome = sessionStorage.getItem('cameFromHome');
      
      if (cameFromHome === 'true') {
        backButton.classList.remove("hidden");
      }
    }

    // Evento de clic para regresar
    backButton.addEventListener("click", (e) => {
      e.preventDefault();
      // Limpiar el flag antes de regresar
      sessionStorage.removeItem('cameFromHome');
      history.back();
    });
  });

  // Detectar navegación y marcar cuando salimos de la home
  document.addEventListener('astro:before-preparation', (event) => {
    const fromPath = window.location.pathname;
    const toPath = event.to?.pathname || '';
    
    // Verificar si estamos en la home
    const isHome = fromPath === '/' || fromPath === `/${lang}/` || fromPath === `/${lang}`;
    
    // Verificar si vamos a proyectos
    const goingToProjects = toPath.includes('/projects');
    
    // Si vamos desde home a proyectos, marcar el flag
    if (isHome && goingToProjects) {
      sessionStorage.setItem('cameFromHome', 'true');
    } else if (!goingToProjects) {
      // Si vamos a cualquier otra página, limpiar el flag
      sessionStorage.removeItem('cameFromHome');
    }
  });

  // Limpiar el flag cuando navegamos a una página que no es proyectos
  document.addEventListener('astro:after-swap', () => {
    const currentPath = window.location.pathname;
    const isProjectsPage = currentPath.includes('/projects');
    
    if (!isProjectsPage) {
      sessionStorage.removeItem('cameFromHome');
    }
  });
</script>

<style>
  #back-to-home-btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
  }

  #back-to-home-btn:before {
    content: "";
    width: 0;
    height: 2px;
    background-color: var(--color-primary);
    position: absolute;
    bottom: 0;
    left: 0;
    transition: width 0.3s ease-out;
  }

  #back-to-home-btn:hover:before {
    width: 100%;
  }
</style>