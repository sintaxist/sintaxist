---
import Layout from "@/layouts/Layout.astro";
import SectionLayout from "@/layouts/SectionLayout.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import GridCardsLayout from "@/components/GridCardsLayout.astro";
import { LANGUAGES } from "@/locales";

export async function getStaticPaths() {
  const paths = [];

  for (const lang of Object.keys(LANGUAGES)) {
    const t = LANGUAGES[lang].translations;

    const filteredProjects = t.projectsPage.projects.map((p) => ({
      slug: p.slug,
      title: p.title,
      description: p.description,
      categoryIds: p.categoryIds,
      imgSrc: p.imgSrc,
      viewMore: t.projectsPage.viewMore,
    }));

    paths.push({
      params: { lang },
      props: {
        texts: {
          allProjectsTitle: t.projectsPage.allProjectsTitle,
          allProjectsDescription: t.projectsPage.allProjectsDescription,
          title: t.projectsPage.title,
        },
        header: t.header,
        sections: t.sections,
        footer: t.footer,
        lang,
        projects: filteredProjects,
        categories: t.projectsPage.categories,
        ctaBacktoHome: t.projectsPage.ctaBacktoHome,
      },
    });
  }

  return paths;
}

const {
  texts,
  lang,
  projects,
  categories,
  header,
  sections,
  footer,
  ctaBacktoHome,
} = Astro.props;

// Dividir proyectos en grupos de 6
const projectBatches = [];
for (let i = 0; i < projects.length; i += 6) {
  projectBatches.push(projects.slice(i, i + 6));
}
---

<Layout
  title={texts.allProjectsTitle}
  description={texts.allProjectsDescription}
  headerInfo={header}
  sections={sections}
  footerInfo={footer}
>
  <SectionLayout
    id="contact"
    color="secondary"
    border={false}
    className="mt-18 flex flex-col gap-8"
  >
      <a
        href="#"
        id="back-to-home-btn"
        class="hidden font-secondary text-primary hover:text-primary-hover transition-colors font-semibold"
      >
        {ctaBacktoHome}
      </a>

    <SectionTitle color="primary" text={texts.title || "Proyectos"} tag="h1" />

    <div class="flex flex-col gap-[5px]">
      {
        projectBatches.map((batch, index) => (
          <GridCardsLayout projects={batch} categories={categories} {lang} />
        ))
      }
    </div>
  </SectionLayout>
</Layout>
<script define:vars={{ lang }}>
  document.addEventListener("astro:page-load", () => {
    // --- LÓGICA PARA EL BOTÓN DE "VOLVER A LA HOME" ---
    const backButton = document.getElementById("back-to-home-btn");
    if (backButton) {
      // Obtenemos la URL de la página anterior
      const referrer = document.referrer;

      console.log(referrer)
      // Construimos la URL esperada de la home para el idioma actual
      const homeUrl = `${window.location.origin}/${lang}/`;

      // Si la página anterior es la home, mostramos el botón
      if (referrer === homeUrl) {
        backButton.classList.remove("hidden");
      }

      // Añadimos el evento de clic para que funcione como el "atrás" del navegador
      backButton.addEventListener("click", (e) => {
        e.preventDefault();
        history.back();
      });
    }
  });
</script>
