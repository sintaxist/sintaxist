---
import Layout from "@/layouts/Layout.astro";
import { LANGUAGES, defaultLang, type AppLocale } from "@/locales";
import FilterTabs from "@/components/ui/FilterTabs.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import AnimatedItem from "@/components/ui/AnimatedItem.astro";

export async function getStaticPaths() {
  const paths = [];

  for (const lang of Object.keys(LANGUAGES)) {
    const t = LANGUAGES[lang].translations;
    for (const project of t.projects_page.projects) {
      paths.push({
        params: { lang, slug: project.slug },
        props: { t, project, lang, categories: t.projects_page.categories },
      });
    }
  }
  return paths;
}

const { lang = defaultLang } = Astro.params as { lang: AppLocale };
const { t, categories } = Astro.props;
---

<Layout
  title="Mis Proyectos"
  description="prueba"
  headerInfo={t.header}
  sections={t.sections}
  footerInfo={t.footer}
>
  <div class="py-24 px-6 md:px-8">
    <header class="text-center max-w-2xl mx-auto mb-12">
      <h1 class="font-primary text-5xl text-primary">Todos mis Proyectos</h1>
      <p class="font-secondary mt-4 text-primary">
        Explora los diferentes trabajos que he realizado, filtrando por
        categor√≠a.
      </p>
    </header>

    <FilterTabs categories={Object.values(t.projects_page.categories)} />

    <section
      id="projects-list"
      class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6 max-w-7xl mx-auto mt-12 animation-group"
    >
      {
        t.projects_page.projects.map((project, index) => (
          <AnimatedItem
            delay={index * 200}
            className={`project-item-${index + 1}`}
            typeAnimation="card"
          >
            <ProjectCard
              {project}
              {lang}
              {categories}
              size={index === 0 || index === 5 ? "large" : "small"}
            />
          </AnimatedItem>
        ))
      }
    </section>
  </div>
</Layout>
