---
import Layout from "@/layouts/Layout.astro";
import { Image } from "astro:assets";
import Button from "@/components/ui/Button.astro";
import Pill from "@/components/ui/Pill.astro";
import SectionTitle from "@/components/ui/SectionTitle.astro";
import { LANGUAGES } from "@/locales";
import type { AppLocale } from "@/locales";

export async function getStaticPaths() {
  const paths = [];
  for (const lang of Object.keys(LANGUAGES)) {
    const t = LANGUAGES[lang as AppLocale].translations;
    for (const project of t.projectsPage.projects) {
      paths.push({
        params: { lang, slug: project.slug },
        props: {
          project,
          lang: lang as AppLocale,
          header: t.header,
          sections: t.sections,
          footer: t.footer,
          categories: t.projectsPage.categories,
          ctaBack: t.projectsPage.ctaBack,
        },
      });
    }
  }
  return paths;
}

const { project, lang, header, sections, footer, categories, ctaBack } =
  Astro.props;
---

<Layout
  title={`${project.title} — Caso de Estudio`}
  description={project.seoDescription || ""}
  headerInfo={header}
  sections={sections}
  footerInfo={footer}
>
  <div class="pt-24 animation-group">
    <article
      class="max-w-4xl mx-auto px-6 md:px-8"
      transition:name={project.slug}
    >
      <header class="text-center mb-12 anim-item" data-animate="text">
        <div class="flex gap-2 justify-center mb-4">
          {
            project.categoryIds?.map((catId) => (
              <Pill label={categories[catId] || catId} />
            ))
          }
        </div>
        <h1 class="font-primary text-5xl text-primary mb-4">{project.title}</h1>
        <p class="text-lg text-primary/80 max-w-3xl mx-auto">{project.intro}</p>
        <div class="flex justify-center gap-4 mt-8 flex-wrap">
          {
            project.demoUrl && (
              <Button
                as="a"
                href={project.demoUrl}
                text="Ver demo"
                target="_blank"
              />
            )
          }
          {
            project.figmaUrl && (
              <Button
                as="a"
                href={project.figmaUrl}
                text="Ver en Figma"
                target="_blank"
              />
            )
          }
          {
            project.repoUrl && (
              <Button
                as="a"
                href={project.repoUrl}
                text="Ver repositorio"
                target="_blank"
              />
            )
          }
        </div>
      </header>

      <div class="anim-item" data-animate="text" data-delay="150">
        <Image
          src={project.imgSrc}
          alt={`...`}
          width={1200}
          height={800}
          class="w-full rounded-2xl shadow-lg mb-16"
        />
      </div>

      <div
        class="prose max-w-none font-secondary text-lg text-primary space-y-16"
      >
        {
          project.context && (
            <section class="anim-item" data-animate="text" data-delay="100">
              <SectionTitle color="primary" text="Contexto" tag="h2" />
              <p set:html={project.context} class="mt-4" />
            </section>
          )
        }

        {
          project.process_description && (
            <section class="anim-item" data-animate="text" data-delay="100">
              <SectionTitle
                color="primary"
                text={project.process_title || "Proceso"}
                tag="h2"
              />
              <p set:html={project.process_description} class="mt-4" />
              {project.process_list && (
                <ul class="list-disc pl-5 space-y-2 mt-4">
                  {project.process_list.map((item) => (
                    <li set:html={item} />
                  ))}
                </ul>
              )}
            </section>
          )
        }

        {
          project.gallery && project.gallery.length > 0 && (
            <section class="not-prose mt-12">
              <div class="grid md:grid-cols-2 gap-6">
                {project.gallery.map((img, index) => (
                  <div
                    class="anim-item"
                    data-animate="text"
                    data-delay={index * 150}
                  >
                    <Image
                      src={img.src}
                      alt={img.alt}
                      class="rounded-xl shadow-md"
                      width={800}
                      height={600}
                    />
                  </div>
                ))}
              </div>
            </section>
          )
        }

        {
          project.results_description && (
            <section class="anim-item" data-animate="text" data-delay="100">
              <SectionTitle
                color="primary"
                text={project.results_title || "Resultados"}
                tag="h2"
              />
              <p set:html={project.results_description} class="mt-4" />
            </section>
          )
        }

        {
          project.figmaEmbed && (
            <section class="anim-item" data-animate="text" data-delay="100">
              <SectionTitle color="primary" text="Diseño en Figma" tag="h2" />
              <iframe
                src={project.figmaEmbed}
                class="w-full h-[400px] md:h-[600px] mt-8 rounded-lg shadow-md border border-gray-200"
                allowfullscreen
              />
            </section>
          )
        }

        <Button
          as="a"
          href={`/${lang}/projects`}
          text={ctaBack}
          fill={false}
          color="primary"
        />
      </div>

    </article>
  </div>
</Layout>
