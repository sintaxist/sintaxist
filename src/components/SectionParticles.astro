<div class="absolute inset-0 overflow-hidden pointer-events-none">
  <canvas id="section-particles-canvas" class="w-full h-full"></canvas>
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const canvas = document.getElementById('section-particles-canvas') as HTMLCanvasElement | null;
    if (!canvas) return;

    const ctx = canvas.getContext('2d');
    if (!ctx) return;
    
    let animationFrameId: number | null = null;
    let particles: Particle[] = [];

    interface Particle {
      x: number; y: number; vx: number; vy: number;
      size: number; opacity: number; color: string; life: number;
    }

    const resizeCanvas = () => {
      canvas.width = canvas.offsetWidth;
      canvas.height = canvas.offsetHeight;
      createParticles();
    };

    const colors = [
      '#10b981', // emerald
      '#3b82f6', // blue
      '#f59e0b', // amber
    ];

    const createParticles = () => {
      const numParticles = 50; 
      particles = [];
      for (let i = 0; i < numParticles; i++) {
        particles.push({
          x: Math.random() * canvas.width,
          y: Math.random() * canvas.height,
          vx: (Math.random() - 0.5) * 0.2,
          vy: (Math.random() - 0.5) * 0.2,
          // ✅ CAMBIO: Más grandes
          size: Math.random() * 4 + 2, 
          // ✅ CAMBIO: Más opacidad
          opacity: Math.random() * 0.6 + 0.4, 
          color: colors[Math.floor(Math.random() * colors.length)],
          life: Math.random() * Math.PI * 2
        });
      }
    };

    const animate = () => {
      ctx.clearRect(0, 0, canvas.width, canvas.height);
      
      particles.forEach((p) => {
        p.x += p.vx;
        p.y += p.vy;

        if (p.x < 0 || p.x > canvas.width) p.vx *= -1;
        if (p.y < 0 || p.y > canvas.height) p.vy *= -1;
        
        p.life += 0.01;
        const pulseFactor = Math.sin(p.life) * 0.3 + 0.7;

        ctx.save();
        ctx.globalAlpha = p.opacity * pulseFactor;
        
        const gradient = ctx.createRadialGradient(p.x, p.y, 0, p.x, p.y, p.size * 2);
        gradient.addColorStop(0, p.color);
        gradient.addColorStop(1, p.color + '00');
        
        ctx.fillStyle = gradient;
        ctx.beginPath();
        ctx.arc(p.x, p.y, p.size * pulseFactor, 0, Math.PI * 2);
        ctx.fill();
        ctx.restore();
      });

      animationFrameId = requestAnimationFrame(animate);
    };

    resizeCanvas();
    animate();

    window.addEventListener('resize', resizeCanvas);
  });
</script>

<style>
  #section-particles-canvas {
    filter: blur(1px);
  }
</style>