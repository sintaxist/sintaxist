---
// Este componente no necesita props, solo renderiza el SVG y el script.
---

<div id="svg-wrapper">
  <svg id="animacion-dev" viewBox="0 0 800 600" xmlns="http://www.w3.org/2000/svg">
    <style>
      .char-fill { fill: #c9d1d9; }
      .laptop-fill { fill: #2c3035; }
      .screen-fill { fill: #58a6ff; }
    </style>
    <g id="escena">
      <g id="personaje" transform="translate(400, 350)">
        <g id="torso">
          <path class="char-fill" d="M-50,50 Q0,-50 50,50 L-50,50 Z" />
        </g>
        <g id="cabeza" transform="translate(0, -50)">
          <circle class="char-fill" cx="0" cy="0" r="40" />
          <circle id="ojo_izquierdo" fill="black" cx="-15" cy="-5" r="3" />
          <circle id="ojo_derecho" fill="black" cx="15" cy="-5" r="3" />
        </g>
        <g id="brazo_izquierdo" transform="translate(-50, 0)">
          <rect class="char-fill" x="-60" y="-10" width="60" height="20" rx="10" />
        </g>
        <g id="brazo_derecho" transform="translate(50, 0)">
          <rect class="char-fill" x="0" y="-10" width="60" height="20" rx="10" />
        </g>
      </g>
      <g id="laptop" transform="translate(400, 450)">
        <rect class="laptop-fill" x="-150" y="0" width="300" height="20" rx="5"/>
        <rect class="laptop-fill" x="-140" y="-120" width="280" height="120" rx="10"/>
        <rect id="pantalla" class="screen-fill" x="-130" y="-110" width="260" height="100"/>
      </g>
    </g>
  </svg>
</div>

<script is:inline>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";

  gsap.registerPlugin(ScrollTrigger);

  // Espera a que el DOM esté listo
  document.addEventListener("DOMContentLoaded", () => {
    
    // --- ANIMACIÓN 1: BUCLE DE GESTOS ---
    const loopTl = gsap.timeline({ repeat: -1, repeatDelay: 1.5 });

    // Estado inicial: "Pensativo"
    gsap.set("#brazo_derecho", { rotation: -30, transformOrigin: "right center" });
    gsap.set("#brazo_izquierdo", { x: -10 });
    
    // 1. Mover a posición "Programando"
    loopTl.to("#brazo_derecho", { rotation: 0, duration: 0.5, ease: "power2.inOut" })
          .to("#brazo_izquierdo", { x: 0, duration: 0.5, ease: "power2.inOut" }, "<")
          .to("#cabeza", { x: 10, duration: 0.5, ease: "power2.inOut" }, "<");

    // 2. Simular tecleo
    loopTl.to(["#brazo_derecho", "#brazo_izquierdo"], {
      y: -5,
      repeat: 5,
      yoyo: true,
      duration: 0.1,
      ease: "power1.inOut"
    });

    // 3. Volver a "Pensativo"
    loopTl.to("#brazo_derecho", { rotation: -30, duration: 0.5, ease: "power2.inOut" })
          .to("#brazo_izquierdo", { x: -10, duration: 0.5, ease: "power2.inOut" }, "<")
          .to("#cabeza", { x: 0, duration: 0.5, ease: "power2.inOut" }, "<");
    
    // Micro-animación: Respiración (se ejecuta en paralelo e infinitamente)
    gsap.to("#torso", {
      scaleY: 1.05,
      transformOrigin: "bottom center",
      repeat: -1,
      yoyo: true,
      duration: 4,
      ease: "sine.inOut"
    });

    // Micro-animación: Parpadeo (se ejecuta en intervalos aleatorios)
    function blink() {
      gsap.to(["#ojo_izquierdo", "#ojo_derecho"], {
        scaleY: 0,
        repeat: 1,
        yoyo: true,
        duration: 0.07,
        transformOrigin: "center center"
      });
      gsap.delayedCall(gsap.utils.random(2, 6), blink);
    }
    blink(); // Inicia el parpadeo

    // --- ANIMACIÓN 2: SCROLL DE LA LAPTOP ---
    const scrollTl = gsap.timeline({
      scrollTrigger: {
        trigger: "#hero-container",
        pin: true,
        scrub: 1,
        start: "top top",
        end: "+=2500" // La animación durará 2500px de scroll
      }
    });

    // Anima la laptop al centro y la escala
    scrollTl.to("#laptop", {
        scale: 5, // El valor exacto dependerá de tu SVG
        x: '50vw', // Centrado horizontal
        y: '45vh', // Centrado vertical
        transformOrigin: "center 70%", // Ajusta el origen de la transformación
        ease: "power2.inOut"
      }, 0)
      .to("#personaje", {
        opacity: 0,
        y: "+=100", // Mover hacia abajo
        ease: "power1.in"
      }, 0); // El 0 hace que se anime al mismo tiempo que la anterior
  });
</script>